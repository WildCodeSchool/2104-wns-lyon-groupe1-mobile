{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Me\\\\wcs\\\\wiki-notes\\\\2104-wns-lyon-groupe1-mobile\\\\App.tsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport \"react-native-gesture-handler\";\nimport React from \"react\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\nimport FlashCard from \"./src/screens/Flashcard\";\nimport ListFlashCards from \"./src/screens/ListFlashCards\";\nimport { screenNames } from \"./src/utils/screenNames\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { AuthContext } from \"./AuthContext\";\nimport * as SecureStore from \"expo-secure-store\";\nimport AuthScreen from \"./src/screens/AuthScreen\";\nimport SettingsScreen from \"./src/screens/SettingsScreen\";\nvar Stack = createNativeStackNavigator();\nvar Drawer = createDrawerNavigator();\nvar cache = new InMemoryCache();\nvar client = new ApolloClient({\n  uri: \"http://192.168.1.98:5000/graphql\",\n  cache: new InMemoryCache()\n});\n\nvar MainStackNavigator = function MainStackNavigator() {\n  return React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: true\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: screenNames.listFlashCards.name,\n    component: ListFlashCards,\n    options: {\n      title: screenNames.listFlashCards.title\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: screenNames.flashCard.name,\n    component: FlashCard,\n    options: {\n      title: screenNames.flashCard.title,\n      headerStyle: {\n        backgroundColor: \"#FCC300\"\n      }\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar AppDrawer = function AppDrawer() {\n  return React.createElement(Drawer.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"listFlashCardsDrawer\",\n    component: MainStackNavigator,\n    options: {\n      title: screenNames.listFlashCards.title\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"settingsDrawer\",\n    component: SettingsScreen,\n    options: {\n      title: screenNames.settingsScreen.title\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default function App() {\n  var _React$useReducer = React.useReducer(function (prevState, action) {\n    switch (action.type) {\n      case \"RESTORE_TOKEN\":\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          userToken: action.token,\n          isLoading: false\n        });\n\n      case \"SIGN_IN\":\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isSignout: false,\n          userToken: action.token\n        });\n\n      case \"SIGN_OUT\":\n        return _objectSpread(_objectSpread({}, prevState), {}, {\n          isSignout: true,\n          userToken: null\n        });\n    }\n  }, {\n    isLoading: true,\n    isSignout: false,\n    userToken: null\n  }),\n      _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n      state = _React$useReducer2[0],\n      dispatch = _React$useReducer2[1];\n\n  React.useEffect(function () {\n    var bootstrapAsync = function bootstrapAsync() {\n      var userToken;\n      return _regeneratorRuntime.async(function bootstrapAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(SecureStore.getItemAsync(\"userToken\"));\n\n            case 3:\n              userToken = _context.sent;\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 9:\n              dispatch({\n                type: \"RESTORE_TOKEN\",\n                token: userToken\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 6]], Promise);\n    };\n\n    bootstrapAsync();\n    console.log(state.useToken);\n  }, []);\n  var authContext = React.useMemo(function () {\n    return {\n      signIn: function signIn(data) {\n        return _regeneratorRuntime.async(function signIn$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                dispatch({\n                  type: \"SIGN_IN\",\n                  token: \"dummy-auth-token\"\n                });\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, null, Promise);\n      },\n      signOut: function signOut() {\n        return dispatch({\n          type: \"SIGN_OUT\"\n        });\n      }\n    };\n  }, []);\n  return React.createElement(ApolloProvider, {\n    client: client,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, React.createElement(AuthContext.Provider, {\n    value: authContext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, state.userToken === null ? React.createElement(Stack.Screen, {\n    name: screenNames.authScreen.name,\n    component: AuthScreen,\n    options: {\n      title: screenNames.authScreen.title\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }) : React.createElement(Stack.Screen, {\n    name: screenNames.root.name,\n    component: AppDrawer,\n    options: {\n      title: screenNames.root.title\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 15\n    }\n  })))));\n}\nAppRegistry.registerComponent(\"MyApplication\", function () {\n  return App;\n});","map":{"version":3,"sources":["C:/Me/wcs/wiki-notes/2104-wns-lyon-groupe1-mobile/App.tsx"],"names":["React","ApolloClient","InMemoryCache","ApolloProvider","FlashCard","ListFlashCards","screenNames","createDrawerNavigator","NavigationContainer","createNativeStackNavigator","AuthContext","SecureStore","AuthScreen","SettingsScreen","Stack","Drawer","cache","client","uri","MainStackNavigator","headerShown","listFlashCards","name","title","flashCard","headerStyle","backgroundColor","AppDrawer","settingsScreen","App","useReducer","prevState","action","type","userToken","token","isLoading","isSignout","state","dispatch","useEffect","bootstrapAsync","getItemAsync","console","log","useToken","authContext","useMemo","signIn","data","signOut","authScreen","root","AppRegistry","registerComponent"],"mappings":"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","sourcesContent":["import \"react-native-gesture-handler\";\nimport React from \"react\";\nimport { AppRegistry } from \"react-native\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\nimport FlashCard from \"./src/screens/Flashcard\";\nimport ListFlashCards from \"./src/screens/ListFlashCards\";\nimport { screenNames } from \"./src/utils/screenNames\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport { NavigationContainer, ParamListBase } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { AuthContext } from \"./AuthContext\";\nimport * as SecureStore from \"expo-secure-store\";\nimport AuthScreen from \"./src/screens/AuthScreen\";\nimport SettingsScreen from \"./src/screens/SettingsScreen\";\nimport { ILoginData } from \"./src/utils/types\";\nimport { LOGIN } from \"./src/utils/graphqlRequests\";\n\nconst Stack = createNativeStackNavigator<ParamListBase>();\nconst Drawer = createDrawerNavigator();\n\n//cache\n//==========================================================\nconst cache = new InMemoryCache()\nconst client = new ApolloClient({\n  uri: \"http://192.168.1.98:5000/graphql\",\n  cache: new InMemoryCache(),\n});\n//==========================================================\n\nconst MainStackNavigator = () => {\n  return (\n    <Stack.Navigator screenOptions={{ headerShown: true }}>\n      <Stack.Screen\n        name={screenNames.listFlashCards.name}\n        component={ListFlashCards}\n        options={{ title: screenNames.listFlashCards.title }}\n      />\n      <Stack.Screen\n        name={screenNames.flashCard.name}\n        component={FlashCard}\n        options={{\n          title: screenNames.flashCard.title,\n          headerStyle: {\n            backgroundColor: \"#FCC300\",\n          },\n        }}\n      />\n    </Stack.Navigator>\n  );\n};\n\nconst AppDrawer = () => {\n  return (\n    <Drawer.Navigator screenOptions={{ headerShown: false }}>\n      <Drawer.Screen\n        name={\"listFlashCardsDrawer\"}\n        component={MainStackNavigator}\n        options={{\n          title: screenNames.listFlashCards.title,\n        }}\n      />\n      <Drawer.Screen\n        name={\"settingsDrawer\"}\n        component={SettingsScreen}\n        options={{\n          title: screenNames.settingsScreen.title,\n        }}\n      />\n    </Drawer.Navigator>\n  );\n};\n\n//=========================================\n\nexport default function App() {\n  const [state, dispatch] = React.useReducer(\n    (prevState: any, action: any) => {\n      switch (action.type) {\n        case \"RESTORE_TOKEN\":\n          return {\n            ...prevState,\n            userToken: action.token,\n            isLoading: false,\n          };\n        case \"SIGN_IN\":\n          return {\n            ...prevState,\n            isSignout: false,\n            userToken: action.token,\n          };\n        case \"SIGN_OUT\":\n          return {\n            ...prevState,\n            isSignout: true,\n            userToken: null,\n          };\n      }\n    },\n    {\n      isLoading: true,\n      isSignout: false,\n      userToken: null,\n    }\n  );\n\n  //============================\n  React.useEffect(() => {\n    const bootstrapAsync = async () => {\n      let userToken;\n      try {\n        userToken = await SecureStore.getItemAsync(\"userToken\");\n      } catch (e) {\n        console.log(e);\n      }\n      dispatch({ type: \"RESTORE_TOKEN\", token: userToken });\n    };\n\n    bootstrapAsync();\n    console.log(state.useToken);\n  }, []);\n\n  //============================\n  const authContext = React.useMemo(\n    () => ({\n      signIn: async (data: any) => {\n        dispatch({ type: \"SIGN_IN\", token: \"dummy-auth-token\" });\n      },\n      signOut: () => dispatch({ type: \"SIGN_OUT\" }),\n    }),\n    []\n  );\n\n  return (\n    <ApolloProvider client={client}>\n      <AuthContext.Provider value={authContext}>\n        <NavigationContainer>\n          <Stack.Navigator screenOptions={{ headerShown: false }}>\n            {state.userToken === null ? (\n              <Stack.Screen\n                name={screenNames.authScreen.name}\n                component={AuthScreen}\n                options={{ title: screenNames.authScreen.title }}\n              />\n            ) : (\n              <Stack.Screen\n                name={screenNames.root.name}\n                component={AppDrawer}\n                options={{ title: screenNames.root.title }}\n              />\n            )}\n          </Stack.Navigator>\n        </NavigationContainer>\n      </AuthContext.Provider>\n    </ApolloProvider>\n  );\n}\nAppRegistry.registerComponent(\"MyApplication\", () => App);\n"]},"metadata":{},"sourceType":"module"}