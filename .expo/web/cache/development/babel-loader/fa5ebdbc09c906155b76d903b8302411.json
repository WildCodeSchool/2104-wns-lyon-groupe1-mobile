{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Me\\\\wcs\\\\wiki-notes\\\\2104-wns-lyon-groupe1-mobile\\\\src\\\\screens\\\\AuthScreen.tsx\";\nimport React, { useState } from \"react\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AppLayout from \"../components/Layout\";\nimport { AuthContext } from \"../../AuthContext\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN } from \"../utils/graphqlRequests\";\nexport default function AuthScreen() {\n  var _React$useContext = React.useContext(AuthContext),\n      signIn = _React$useContext.signIn;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      emailInput = _useState2[0],\n      setEmailInput = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      passwordInput = _useState4[0],\n      setPasswordInput = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      authErrorText = _useState6[0],\n      setAuthErrorText = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isVisibleErrorMessage = _useState8[0],\n      setIsVisibleErrorMessage = _useState8[1];\n\n  var _useMutation = useMutation(LOGIN, {\n    onCompleted: function onCompleted(value) {\n      console.log(\"ok\");\n    },\n    onError: function onError(e) {\n      console.log(e);\n    }\n  }),\n      _useMutation2 = _slicedToArray(_useMutation, 1),\n      connect = _useMutation2[0];\n\n  var authenticate = function authenticate() {\n    if (emailInput === \"\" || passwordInput === \"\") {\n      setIsVisibleErrorMessage(true);\n      setAuthErrorText(\"Veuillez entrer un mail et un mot de passe\");\n    } else {\n      connect({\n        variables: {\n          mail: \"eleve1@☺aca.com\",\n          password: \"eleve1\"\n        }\n      });\n    }\n  };\n\n  return React.createElement(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(ErrorMessage, {\n    errorText: authErrorText,\n    isVisible: isVisibleErrorMessage,\n    callback: function callback() {\n      return setIsVisibleErrorMessage(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: stlyes.layout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(Image, {\n    source: require(\"../../assets/mainLogo.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    onChangeText: setEmailInput,\n    value: emailInput,\n    placeholder: \"Email\",\n    style: stlyes.authInput,\n    textContentType: \"emailAddress\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    onChangeText: setPasswordInput,\n    value: passwordInput,\n    placeholder: \"Mot de passe\",\n    style: stlyes.authInput,\n    textContentType: \"newPassword\",\n    secureTextEntry: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), React.createElement(View, {\n    style: stlyes.authButtonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, React.createElement(Button, {\n    title: \"Me connecter\",\n    onPress: authenticate,\n    color: \"#8FC89A\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }))));\n}\nvar stlyes = StyleSheet.create({\n  layout: {\n    textAlign: \"center\",\n    padding: 20,\n    alignItems: \"center\"\n  },\n  authInput: {\n    marginTop: 20,\n    borderWidth: 2,\n    borderColor: \"#8FC89A\",\n    width: \"80%\",\n    padding: 5\n  },\n  authButtonContainer: {\n    marginTop: 60,\n    width: \"80%\"\n  }\n});","map":{"version":3,"sources":["C:/Me/wcs/wiki-notes/2104-wns-lyon-groupe1-mobile/src/screens/AuthScreen.tsx"],"names":["React","useState","AppLayout","AuthContext","ErrorMessage","useMutation","LOGIN","AuthScreen","useContext","signIn","emailInput","setEmailInput","passwordInput","setPasswordInput","authErrorText","setAuthErrorText","isVisibleErrorMessage","setIsVisibleErrorMessage","onCompleted","value","console","log","onError","e","connect","authenticate","variables","mail","password","stlyes","layout","require","authInput","authButtonContainer","StyleSheet","create","textAlign","padding","alignItems","marginTop","borderWidth","borderColor","width"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  Button,\n  View,\n  Image,\n  TextInput,\n  StyleSheet,\n  Alert,\n} from \"react-native\";\nimport AppLayout from \"../components/Layout\";\nimport { AuthContext } from \"../../AuthContext\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport { useMutation } from \"@apollo/client\";\nimport { LOGIN } from \"../utils/graphqlRequests\";\nimport { ILoginData } from \"../utils/types\";\n\nexport default function AuthScreen() {\n  const { signIn } = React.useContext(AuthContext);\n  const [emailInput, setEmailInput] = useState(\"\");\n  const [passwordInput, setPasswordInput] = useState(\"\");\n  const [authErrorText, setAuthErrorText] = useState(\"\");\n  const [isVisibleErrorMessage, setIsVisibleErrorMessage] = useState(false);\n  const [connect] = useMutation(LOGIN, {    \n    onCompleted: (value) => {\n      console.log(\"ok\");\n    },\n    onError: (e) => {\n      console.log(e);\n    },\n  });\n\n\n  const authenticate = () => {\n    if (emailInput === \"\" || passwordInput === \"\") {\n      setIsVisibleErrorMessage(true);\n      setAuthErrorText(\"Veuillez entrer un mail et un mot de passe\");\n    } else {\n      connect({\n        variables: { mail: \"eleve1@☺aca.com\", password: \"eleve1\" },\n      });\n    }\n  };\n\n  //=======================================================================\n  return (\n    <AppLayout>\n      <ErrorMessage\n        errorText={authErrorText}\n        isVisible={isVisibleErrorMessage}\n        callback={() => setIsVisibleErrorMessage(false)}\n      />\n      <View style={stlyes.layout}>\n        <Image source={require(\"../../assets/mainLogo.png\")} />\n        <TextInput\n          onChangeText={setEmailInput}\n          value={emailInput}\n          placeholder={\"Email\"}\n          style={stlyes.authInput}\n          textContentType={\"emailAddress\"}\n        />\n        <TextInput\n          onChangeText={setPasswordInput}\n          value={passwordInput}\n          placeholder={\"Mot de passe\"}\n          style={stlyes.authInput}\n          textContentType={\"newPassword\"}\n          secureTextEntry={true}\n        />\n        <View style={stlyes.authButtonContainer}>\n          <Button\n            title={\"Me connecter\"}\n            onPress={authenticate}\n            color={\"#8FC89A\"}\n          />\n        </View>\n      </View>\n    </AppLayout>\n  );\n}\n\nconst stlyes = StyleSheet.create({\n  layout: {\n    textAlign: \"center\",\n    padding: 20,\n    alignItems: \"center\",\n  },\n  authInput: {\n    marginTop: 20,\n    borderWidth: 2,\n    borderColor: \"#8FC89A\",\n    width: \"80%\",\n    padding: 5,\n  },\n  authButtonContainer: {\n    marginTop: 60,\n    width: \"80%\",\n  },\n});\n"]},"metadata":{},"sourceType":"module"}