{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Me\\\\wcs\\\\wiki-notes\\\\2104-wns-lyon-groupe1-mobile\\\\src\\\\screens\\\\ListFlashCards.tsx\";\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { debounce } from \"lodash\";\nimport FlashCardCell from \"../components/FlashCardCell\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport AppLayout from \"../components/Layout\";\nimport { listFlashCardsMock } from \"../utils/mocks/listFlashCardsMock\";\nexport default function ListFlashCards() {\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      filterText = _useState2[0],\n      setFilterText = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filterTextDelayed = _useState4[0],\n      setFilterTextDelayed = _useState4[1];\n\n  var _useState5 = useState([{}]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      flashCards = _useState6[0],\n      setFlashCards = _useState6[1];\n\n  useEffect(function () {\n    if (filterTextDelayed === \"\") {\n      setFlashCards(listFlashCardsMock);\n    }\n\n    if (filterTextDelayed !== \"\") {\n      fetchFlashCards(listFlashCardsMock, filterTextDelayed);\n    }\n  }, [filterTextDelayed]);\n\n  var fetchFlashCards = function fetchFlashCards(listFlashCards, filterTextDelayed) {\n    var listFilteredFlashCards = [];\n\n    for (var i = 0; i < listFlashCards.length; i++) {\n      for (var j = 0; j < listFlashCards[i].tag.length; j++) {\n        if (listFlashCards[i].tag[j] === filterTextDelayed) {\n          listFilteredFlashCards.push(listFlashCards[i]);\n        }\n      }\n    }\n\n    setFlashCards(listFilteredFlashCards);\n  };\n\n  var debouncedFilter = useCallback(debounce(function (value) {\n    return setFilterTextDelayed(value);\n  }, 500), []);\n\n  var handleFilterTextChange = function handleFilterTextChange(value) {\n    setFilterText(value);\n    debouncedFilter(value);\n  };\n\n  return React.createElement(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: styles.cellsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.filterContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    onChangeText: function onChangeText(value) {\n      return handleFilterTextChange(value);\n    },\n    value: filterText,\n    placeholder: \"Nom de la fiche\",\n    textContentType: \"emailAddress\",\n    style: styles.filterInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }), React.createElement(Image, {\n    source: require(\"../../assets/filterLoop.png\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  })), flashCards.map(function (flashCard, key) {\n    return React.createElement(FlashCardCell, {\n      key: key,\n      flashCardTitle: flashCard.title,\n      flashCard_id: flashCard._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    });\n  })));\n}\nvar styles = StyleSheet.create({\n  cellsContainer: {\n    alignItems: \"center\"\n  },\n  filterContainer: {\n    flexDirection: \"row\",\n    width: \"90%\",\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingRight: 10,\n    paddingLeft: 10,\n    borderWidth: 1,\n    borderColor: \"#787878\",\n    padding: 5,\n    borderRadius: 5\n  },\n  filterInput: {\n    flex: 1\n  }\n});","map":{"version":3,"sources":["C:/Me/wcs/wiki-notes/2104-wns-lyon-groupe1-mobile/src/screens/ListFlashCards.tsx"],"names":["React","useEffect","useState","useCallback","debounce","FlashCardCell","ScrollView","AppLayout","listFlashCardsMock","ListFlashCards","filterText","setFilterText","filterTextDelayed","setFilterTextDelayed","flashCards","setFlashCards","fetchFlashCards","listFlashCards","listFilteredFlashCards","i","length","j","tag","push","debouncedFilter","value","handleFilterTextChange","styles","cellsContainer","filterContainer","filterInput","require","map","flashCard","key","title","_id","StyleSheet","create","alignItems","flexDirection","width","paddingTop","paddingBottom","paddingRight","paddingLeft","borderWidth","borderColor","padding","borderRadius","flex"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\nimport { View, StyleSheet, TextInput, Image } from \"react-native\";\nimport { debounce, filter } from \"lodash\";\nimport FlashCardCell from \"../components/FlashCardCell\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport AppLayout from \"../components/Layout\";\n\nimport { listFlashCardsMock } from \"../utils/mocks/listFlashCardsMock\";\n//=============================================================================\n\nexport default function ListFlashCards(): JSX.Element {\n  const [filterText, setFilterText] = useState(\"\");\n  const [filterTextDelayed, setFilterTextDelayed] = useState(\"\");\n  const [flashCards, setFlashCards] = useState<any>([{}]);\n     useEffect(() => {\n    if(filterTextDelayed === \"\"){\n      setFlashCards(listFlashCardsMock);\n    }\n    if(filterTextDelayed !== \"\") {\n      fetchFlashCards(listFlashCardsMock, filterTextDelayed)\n    }\n  }, [filterTextDelayed]);\n\n  //============================================================================\n  const fetchFlashCards = (listFlashCards : any, filterTextDelayed : string) => {\n    let listFilteredFlashCards = [];\n    for(let i=0; i<listFlashCards.length;i++){\n      for(let j=0; j<listFlashCards[i].tag.length; j++){\n        if(listFlashCards[i].tag[j] === filterTextDelayed){\n          listFilteredFlashCards.push(listFlashCards[i]);\n        }\n      }\n    }\n    setFlashCards(listFilteredFlashCards);\n  }\n  //============================================================================\n\n  const debouncedFilter = useCallback(\n    debounce((value: string) => setFilterTextDelayed(value), 500),\n    []\n  );\n  const handleFilterTextChange = (value: string) => {\n    setFilterText(value);\n    debouncedFilter(value);\n  };\n  //===============================================================================\n\n  return (\n    <AppLayout>\n      <ScrollView contentContainerStyle={styles.cellsContainer}>\n        <View style={styles.filterContainer}>\n          <TextInput\n            onChangeText={(value) => handleFilterTextChange(value)}\n            value={filterText}\n            placeholder={\"Nom de la fiche\"}\n            textContentType={\"emailAddress\"}\n            style={styles.filterInput}\n          />\n          <Image source={require(\"../../assets/filterLoop.png\")} />\n        </View>\n\n        {flashCards.map((flashCard: any, key: number) => {\n          return (\n            <FlashCardCell\n              key={key}\n              flashCardTitle={flashCard.title}\n              flashCard_id={flashCard._id}\n            />\n          );\n        })}\n      </ScrollView>\n    </AppLayout>\n  );\n}\n\nconst styles = StyleSheet.create({\n  cellsContainer: {\n    alignItems: \"center\",\n  },\n\n  filterContainer: {\n    flexDirection: \"row\",\n\n    width: \"90%\",\n    paddingTop: 10,\n    paddingBottom: 10,\n    paddingRight: 10,\n    paddingLeft: 10,\n    borderWidth: 1,\n    borderColor: \"#787878\",\n    padding: 5,\n    borderRadius: 5,\n  },\n  filterInput: {\n    flex: 1,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}